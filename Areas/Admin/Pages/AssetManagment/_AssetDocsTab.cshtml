@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
 <partial name="_DeattachAssetDocumentPopup"   />
<div class="slim-mainpanel">
    <div class="container">
        <div class="table-wrapper">
            <div id="datatable1_wrapper" class="dataTables_wrapper no-footer">
                <label class="section-title d-inline">@sharedResource["Documents"]</label>
                <a href="javascript:void(0)" onclick="ShowAssetDocumentPopup('<% data.AssetId %>')" class="btn btn-primary" style="float:right">@sharedResource["Add Document"] </a>
            </div><!-- slim-pageheader -->
            <br />
            <br />
            @(Html.DevExtreme().DataGrid<AssetProject.Models.AssetDocument>()
.ID("gridDocumentContainer")
.DataSource(ds => ds.Mvc()
.Controller("AssetDocuments")
.LoadAction("Get")
//.InsertAction("Post")
.LoadParams(new { AssetId = Model})
//.UpdateAction("Put")
.DeleteAction("Delete")
    .Key("AssetDocumentId")
)

.RemoteOperations(true)
 .ShowBorders(true)
    .Paging(p => p.PageSize(10))
    .Pager(p => p.ShowPageSizeSelector(true).AllowedPageSizes(new[] { 10, 20, 40, 80 }))
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
      .HeaderFilter(headerFilter => headerFilter.Visible(true))
.Columns(columns =>
{



columns.AddFor(m => m.DocumentName).Caption(sharedResource["Document Name"]);

columns.AddFor(m => m.DocumentType).Caption(sharedResource["Document Type"]);

columns.AddFor(m => m.Description).Caption(sharedResource["Description"]);
columns.Add().Width(160).Alignment(HorizontalAlignment.Center)
.CellTemplate(@<text>

                            @*@Html.DevExtreme().Button().Text("Edit").OnClick("function (e) { editButtonClick(data) }")*@
                            @Html.DevExtreme().Button().Text(sharedResource["Detach"]).OnClick("function (e) { DeattachDocumentButtonClick(data)}")
  </text>);
    })
    //.Editing(e => e
    //    .AllowAdding(true)
    //    .AllowUpdating(true)
    //    .AllowDeleting(true)
    //)
)
            <div id="AssetDocumentEditPoup" class="modal fade effect-super-scaled" style="display: none;" aria-hidden="true">
                <div class="modal-dialog modal-dialog-vertical-center modal-lg" role="document">
                    <form asp-area="Admin" asp-page="/AssetManagment/AssetProfile" asp-page-handler="AddAssetDocument" asp-route-AssetId="@Model" enctype="multipart/form-data">
                        <div class="modal-content bd-0 tx-14">
                            <div class="modal-header pd-y-20 pd-x-25">
                                <h6 class="tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold" id="AssetDescriptiontxt"></h6>
                                <button type="button" class="close" data-dismiss="modal" aria-label="@sharedResource["Close"]">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                            <div class="modal-body pd-25">
                                @(Html.DevExtreme().Form<AssetProject.Models.AssetDocument>()
                .ID("addassetdocument")
                .ColCount(1)

                .Items(items =>
                {
                items.AddSimpleFor(m => m.Description).Label(l => l.Text(sharedResource["Description"]));
                items.AddSimpleFor(m => m.DocumentName).Label(l => l.Text(sharedResource["Document Name"]));
                items.AddSimpleFor(m => m.DocumentType).Label(k => k.Text(sharedResource["Document"])).Template(@<text>
                     <div class="form-group">
                              <div class="custom-file">
                                  <input type="file" name="file" accept=".docx, .doc, .pdf" class="custom-file-input" id="dc" onchange="docName()" required>
                                  <label class="custom-file-label" for="File" id="doclabel"></label>
                              </div>
                          </div>
                                </text> );
                items.AddGroup().ColCount(2)
               .Items(groupItems =>
               {
               groupItems.AddButton()
                .HorizontalAlignment(HorizontalAlignment.Center)
                .ButtonOptions(b => b.Text(@sharedResource["Save"])
                    .Type(ButtonType.Default)
                    .UseSubmitBehavior(true)
            );
               groupItems.AddButton()
                .HorizontalAlignment(HorizontalAlignment.Center)
                .ButtonOptions(b => b.Text(sharedResource["Cancel"]).ElementAttr("data-dismiss", "modal")

                );
                   });
                }
                )
)
                                <br />

                            </div>
                            
                        </div>
                    </form>
                </div><!-- modal-dialog -->
            </div>
        </div>
    </div>
    </div>
    <script>

        function docName() {
            
            var fileName = document.getElementById("dc").value.split("\\").pop();
            console.log(document.getElementById("dc").value.split("\\").pop())
            
            document.getElementById("doclabel").innerHTML = fileName;
        }
        
        function deleteButtonClick(data) {
            var grid = $('#gridDocumentContainer').dxDataGrid('instance');
            var rowIndex = grid.getRowIndexByKey(data.AssetDocumentId)
            grid.deleteRow(rowIndex);
        }
        function DeattachDocumentButtonClick(data) {

        $('#DeattacheAssetDocumentPoup').modal('show');
      document.getElementById("AssetDocumentIdFaild").value=data.AssetDocumentId;
      document.getElementById("DocumentNameFaild").value=data.DocumentName;
      document.getElementById("DocumentDescriptionFaild").value=data.Description;

     }

      window.addEventListener('DOMContentLoaded', (event) => {
        if (localStorage.getItem("lang") != "") {

             if (localStorage.getItem("lang") == "ar") {
                console.log("In Page")
                 dataGrid = $("#gridDocumentContainer").dxDataGrid("instance");
                dataGrid.option("rtlEnabled", true);
            }
        }
    });

    </script>
