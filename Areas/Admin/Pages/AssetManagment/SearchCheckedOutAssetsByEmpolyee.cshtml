@page
@model AssetProject.Areas.Admin.Pages.AssetManagment.SearchCheckedOutAssetsByEmpolyeeModel
@{
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

<div class="slim-mainpanel">
      <div class="container">
        <div class="slim-pageheader">
          <ol class="breadcrumb slim-breadcrumb">
            <li class="breadcrumb-item"><a href="#">@sharedResource["Home"]</a></li>
            <li class="breadcrumb-item"><a href="#">@sharedResource["Asset"]</a></li>
            <li class="breadcrumb-item active" aria-current="page">@sharedResource["Search Asset"]</li>
          </ol>
          <h6 class="slim-pagetitle">@sharedResource["Search Asset"]</h6>
        </div><!-- slim-pageheader -->

        <div class="section-wrapper"> 
            <div class="form-layout">
                <form method="post" enctype="multipart/form-data" id="SearchForm">
                     <div class="row mg-b-5">
                  
              <div class="col-lg-4">
                <div class="form-group">
                 @* <label class="form-control-label">Search <span class="tx-danger">*</span></label>*@
              
                                @(Html.DevExtreme().LookupFor(c=>c.EmpolyeeID)
                                .DataSource(d => d.WebApi()
                                .Controller("Lookups")
                                .LoadAction("EmpolyeesLookup")
                                .Key("Value")
                                )
                                .ValueExpr("Value")
                                .DisplayExpr("Text").Placeholder(sharedResource["Select Employee"])
                                .ShowClearButton(true)
                                .ClearButtonText(sharedResource["Clear"])
                                .CancelButtonText(sharedResource["Cancel"])
                                .SearchPlaceholder(sharedResource["searching"])
                                )

                   <span asp-validation-for="@Model.EmpolyeeID" class="text-danger"></span>
                </div>
              </div><!-- col-4 -->
            </div><!-- row -->
         <div class="form-layout-footer">
             <button class="btn btn-primary bd-0">@sharedResource["searching"]</button>
                    </div><!-- form-layout-footer -->


                </form>

            </div><!-- form-layout -->
            <br />
            <br />
            <div class="row mg-b-25">
                
                       <div class="col-lg-12">
                <div class="card card-table">
                    <div class="card-header">
                        <h6 class="slim-card-title">@sharedResource["Asset List"]</h6>
                        @*<p>Please search and select</p>*@
                    </div><!-- card-header -->
                    <div class="table-responsive">
  <script>
    function grid_dataSource_beforeSend(op, ajax) {
        ajax.headers = {
            RequestVerificationToken: "@Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken"
        };
    }
</script>
                          @(Html.DevExtreme().DataGrid<AssetProject.Models.Asset>()
                     .ID("grid-container")
                 .DataSource(ds => ds.RemoteController()
                 .LoadUrl(Url.Page("SearchCheckedOutAssetsByEmpolyee", "GridData")) 
                      .Key("AssetId")
                    .OnBeforeSend("grid_dataSource_beforeSend")

                  ).HeaderFilter(headerFilter => headerFilter.Visible(true))
                  
                    .ColumnAutoWidth(true)
                    .WordWrapEnabled(true)
                     .ShowBorders(true)
    .Paging(p=>p.PageSize(10))
    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
  @*  .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true))*@
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
      .HeaderFilter(headerFilter => headerFilter.Visible(true))

                    .Columns(columns => {


                    columns.AddFor(m => m.Photo).Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                            <div>
                                <img src="<%- '/'+value %>" alt="" width="35" height="35" />
                            </div>
                        </text>).Caption(sharedResource["Photo"]);

                    columns.AddFor(m => m.AssetTagId).Caption(sharedResource["Asset TagId"]);

                    columns.AddFor(m => m.AssetSerialNo).Caption(sharedResource["AssetSerialNo"]);
                    })
                    .RemoteOperations(true)
                    //.OnContentReady("datagridData")
            
                    )
                    </div><!-- table-responsive -->
                
                </div>
            </div>
            </div> <!-- Grid_Row-->
        </div><!-- section-wrapper -->

              </div><!-- container -->
            </div>
            @section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script> 
  window.addEventListener('DOMContentLoaded', (event) => {
        if (localStorage.getItem("lang") != "") {

             if (localStorage.getItem("lang") == "ar") {
                console.log("In Page")
                 dataGrid = $("#grid-container").dxDataGrid("instance");
                dataGrid.option("rtlEnabled", true);
            }
        }
    });
    </script>
}
