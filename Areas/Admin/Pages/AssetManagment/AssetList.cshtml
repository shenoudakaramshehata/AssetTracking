 @page
@model AssetProject.Areas.Admin.Pages.AssetManagment.AssetListModel
@{
}

<div class="slim-mainpanel">
    <div class="container">
        <div class="slim-pageheader">
            <ol class="breadcrumb slim-breadcrumb">
                <li class="breadcrumb-item"><a href="#">@sharedResource["Home"]</a></li>
                <li class="breadcrumb-item"><a href="#">@sharedResource["ASSETS"]</a></li>
                <li class="breadcrumb-item active" aria-current="page">@sharedResource["Assets List"]</li>
            </ol>
            <h6 class="slim-pagetitle">@sharedResource["Assets List"] </h6>
        </div><!-- slim-pageheader -->
        <div class="section-wrapper">
            <label class="section-title d-inline">Assets List</label>
            <a asp-area="Admin" asp-page="/AssetManagment/AddAsset" class="btn btn-primary" style="float:right"> @sharedResource["Add Asset"]   </a>
            <p class="mg-b-20 mg-sm-b-40">@sharedResource["search"] .</p>
            <div class="table-wrapper">
                <div id="datatable1_wrapper" class="dataTables_wrapper no-footer">
                    @(Html.DevExtreme().DataGrid<AssetProject.Models.Asset>()
                     .ID("gridContainer")
                    .DataSource(ds => ds.Mvc()
                    .Controller("Assets")
                    .LoadAction("Get")
                   .InsertAction("Post")
                    .UpdateAction("Put")
                   .DeleteAction("Delete")
                    .Key("AssetId")
                    )
                    .HeaderFilter(headerFilter => headerFilter.Visible(true))
                    @*.Selection(s => s
                    .Mode(SelectionMode.Multiple)
                    )*@
                    @*.ColumnChooser(cc => cc.Enabled(true))*@
                    .ColumnAutoWidth(true)
                    .WordWrapEnabled(true)
                     .ShowBorders(true)
    .Paging(p=>p.PageSize(10))
    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
    .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true))
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
      .HeaderFilter(headerFilter => headerFilter.Visible(true))

                    .Columns(columns => {


                    columns.AddFor(m => m.Photo).Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                            <div>
                                <img src="<%- value %>" alt="" width="35" height="35" />
                            </div>
                        </text>).Caption(sharedResource["Photo"]);
                    //columns.AddFor(m => m.AssetDescription).Caption(sharedResource["Asset Description"]);

                    columns.AddFor(m => m.AssetTagId).Caption(sharedResource["AssetTagId"]);

                    columns.AddFor(m => m.AssetCost).Caption(sharedResource["AssetCost"]);

                    columns.AddFor(m => m.AssetSerialNo).Caption(sharedResource["AssetSerialNo"]);

                    columns.AddFor(m => m.AssetPurchaseDate).Caption(sharedResource["AssetPurchaseDate"]);

                    columns.AddFor(m => m.ItemId).Caption("Item").Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("Assets").LoadAction("ItemsLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                    ).Caption(sharedResource["Item"]);



             @*       columns.AddFor(m => m.AssetPhoto);*@

                    //columns.AddFor(m => m.DepreciableCost);

                    //columns.AddFor(m => m.SalvageValue);

                    //columns.AddFor(m => m.AssetLife);

                    //columns.AddFor(m => m.DateAcquired);

                    //columns.AddFor(m => m.DepreciationMethodId).Lookup(lookup => lookup
                    //    .DataSource(ds => ds.WebApi().Controller("Assets").LoadAction("DepreciationMethodsLookup").Key("Value"))
                    //    .ValueExpr("Value")
                    //    .DisplayExpr("Text")
                    //);

                    })
                    .RemoteOperations(true).Columns(columns =>
                    {
                    columns.Add().Width(160).Alignment(HorizontalAlignment.Center)
                    .CellTemplate(@<text>
                            @Html.DevExtreme().Button().Text(sharedResource["Edit"]).OnClick("function (e) { editButtonClick(data) }")
                            @Html.DevExtreme().Button().Text(sharedResource["Delete"]).OnClick("function (e) { deleteButtonClick(data) }")
                            @Html.DevExtreme().Button().Text(sharedResource["View"]).OnClick("function (e) { viewButtonClick(data) }")
                        </text>);

                    })

                    )
                    @(Html.DevExtreme().Popup().ID("customPopup").Width(700)
        .MaxHeight(700)
        .Container(".dx-viewport").Title("Custom popup edit").Visible(false)
                    .ContentTemplate(@<text>

                        <div class="row">

  @*  <form asp-area="Admin" asp-page="/AssetManagment/AssetList" asp-page-handler="Grid" enctype="multipart/form-data">

                            @(Html.DevExtreme().Form<AssetProject.Models.Asset>()
                            .ID("frmEdit")
                            .Items(items =>
                            {
                            items.AddSimpleFor(m => m.AssetId).Visible(false);
                            items.AddSimpleFor(m => m.AssetDescription).Label(k => k.Text("Description")).IsRequired(true);
                            items.AddSimpleFor(m => m.Photo).Label(k => k.Text("Photo")).Template(@<text>


                                    @(Html.DevExtreme().FileUploader()
                                .Name("Photo")
                                .SelectButtonText("Sample")
                                .LabelText("")
                                .Accept("image/*")
                                .UploadMode(FileUploadMode.UseForm)
                                .Height(70)
                                    )
                                </text> );
                            items.AddButton()
                            .ColSpan(3)
                            .ButtonOptions(b => b.Text(sharedResource["Save"])
                            .Type(ButtonType.Success)
                            .UseSubmitBehavior(true)).CssClass("invers");
                            })
                            )
                        </form>*@
                        </div>


                       <div class="row mg-b-25">
                             <div class="col-lg-5">
                                 <div class="form-group">
                         @Html.Label(sharedResource["Asset Description"])
                            @Html.DevExtreme().TextBox().ID("TxtAssetDescription")
                            </div>
                            </div>
                            <br>

                        <div class="col-lg-5">
                                 <div class="form-group">
                            @Html.Label(sharedResource["Assettagid"])
                            @Html.DevExtreme().TextBox().ID("TxtAssetTagId")
                            </div>
                            </div>
                            <br>
                              <div class="col-lg-5">
                                 <div class="form-group">
                           @Html.Label(sharedResource["AssetCost"])
                            @Html.DevExtreme().TextBox().ID("TxtAssetCost")
                            </div>
                            </div>
                            <br>

                              <div class="col-lg-5">
                                 <div class="form-group">
                           @Html.Label(sharedResource["AssetSerialNo"])
                            @Html.DevExtreme().TextBox().ID("TxtAssetSerialNo")
                            </div>
                            </div>
                            <br>

                              <div class="col-lg-5">
                                 <div class="form-group">
                                 @Html.Label(sharedResource["AssetPurchaseDate"])
                            @Html.DevExtreme().DateBox().ID("AssetPurchaseDate")
                            </div>
                            </div>
                            <br>

                                     <div class="col-lg-5">
                                 <div class="form-group">
                                 @Html.Label(sharedResource["Item"])
                                  @(Html.DevExtreme().Lookup()
                             .ID("TxtAssetItem")
            .DataSource(d => d.WebApi()
                .Controller("Lookups")
                .LoadAction("ItemsLookup")
                .Key("Value")
            )
            .ValueExpr("Value")
            .DisplayExpr("Text")
        )
                            </div>
                            </div>
                            <br>

                               <div class="col-lg-5">
                          <div class="form-group">
                              @Html.Label("Asset Photo")
                              <div class="custom-file">
                                  <input type="file" name="file" accept=".png, .jpg, .jpeg" class="custom-file-input" onchange="changephotoname()" id="Photo" required>
                                  <label class="custom-file-label" for="File" id="photolabel">@sharedResource["Choose New Photo"]</label>
                              </div>
                          </div>
                      </div>
  @*       <div class="col-lg-4">
                                 <div class="form-group">
                                @Html.Label("Asset Photo")
      @Html.DevExtreme().FileUploader().ID("Photo")
                            </div>
                            </div>
                            <br>*@

</div>
      @Html.DevExtreme().Button().Text(sharedResource["Save"]).OnClick("function (e) { saveButtonClick() }")
      @Html.DevExtreme().Button().Text(sharedResource["Cancel"]).OnClick("function (e) { cancelButtonClick() }")

                        </text>))
                    @*         @Html.PartialAsync("_AssetEditPopup",Model);
                    *@
                    @(Html.DevExtreme().Popup().ID("viewPopup").Width(600).Visible(false)
                    .ContentTemplate(@<text>
                 <div class="col-lg-4">

                    <h3 id="AssetDescription">
                    </h3>
                      </div>

                        <div class="row mg-b-25">

                    <div class="col-lg-4">
                        <img src="" width="250" height="250" id="img" />
                    </div><!-- col-4 -->
                      <div class="col-lg-4 offset-2">
                          <table class="table table-bordered table-hover table-striped">
                              <tr>
                                <td>
                                   @sharedResource["Asset Cost"]
                                </td>
                                 <td id="AssetCost">
                                </td>
                                  <tr />
                              <tr>
                                  <td>
                                      @sharedResource["AssetSerialNo"]
                                  </td>
                                  <td id="AssetSerialNo">
                                  </td>
                              </tr>
                            <tr>
                                <td>
                                   @sharedResource["AssetPurchaseDate"]                                 </td>
                                <td id="TxtAssetPurchaseDate"></td>
                            </tr>
                              <tr>
                                  <td>
                                      @sharedResource["Item"] 
                                  </td>
                                  <td id="AssetItem"></td>
                              </tr>
                            </table>
                                </div>
                            </div>

                <a id="btn" href="">
                 <input type='button' class="btn btn-secondary bd-0" value='More Details' />
              </a>

                            @Html.DevExtreme().Button().Text(sharedResource["Cancel"]).OnClick("function (e) { closeButtonClick() }")
                        </text>))


                </div>
            </div><!-- table-wrapper -->
        </div><!-- section-wrapper -->

    </div><!-- container -->
</div>

<script>

            var currentKey;
    function editButtonClick(data) {
        $('#customPopup').dxPopup('instance').option('visible', true);
        $('#frmEdit').dxForm('instance').option('formData', data);

                var AssetDescription = $('#TxtAssetDescription').dxTextBox('instance');
        AssetDescription.option('value', data.AssetDescription);
          var AssetTagId = $('#TxtAssetTagId').dxTextBox('instance');
        AssetTagId.option('value', data.AssetTagId);
          var AssetCost = $('#TxtAssetCost').dxTextBox('instance');
        AssetCost.option('value', data.AssetCost);
          var AssetSerialNo = $('#TxtAssetSerialNo').dxTextBox('instance');
       AssetSerialNo.option('value', data.AssetSerialNo);
          var AssetPurchaseDate = $('#AssetPurchaseDate').dxDateBox('instance');
        AssetPurchaseDate.option('value', data.AssetPurchaseDate);
          var AssetItem = $('#TxtAssetItem').dxLookup('instance');
        AssetItem.option('value', data.ItemId);

  
        currentKey = data.AssetId;
    }
    function deleteButtonClick(data) {
        var grid = $('#gridContainer').dxDataGrid('instance');
        var rowIndex = grid.getRowIndexByKey(data.AssetId)
        grid.deleteRow(rowIndex);
    }
    function saveButtonClick() {
        var grid = $('#gridContainer').dxDataGrid('instance');
        var AssetTagId = $('#TxtAssetTagId').dxTextBox('instance');
        var AssetTagIdvalue = AssetTagId.option('value');
 
         var AssetDescription = $('#TxtAssetDescription').dxTextBox('instance');
        var AssetDescriptionvalue = AssetDescription.option('value');
          var AssetCost = $('#TxtAssetCost').dxTextBox('instance');
        var AssetCostvalue = AssetCost.option('value');
          var AssetSerialNo = $('#TxtAssetSerialNo').dxTextBox('instance');
        var AssetSerialNovalue = AssetSerialNo.option('value');
          var AssetPurchaseDate = $('#AssetPurchaseDate').dxDateBox('instance');
         var AssetPurchaseDatevalue =AssetPurchaseDate.option('value');
          var AssetItem= $('#TxtAssetItem').dxLookup('instance');
        var TxtAssetItemvalue = AssetItem.option('value');
          var Photo =document.getElementById("Photo");
          var Photovalue = Photo.value.split("\\").pop();
        var rowIndex = grid.getRowIndexByKey(currentKey);
        grid.cellValue(rowIndex, "AssetTagId", AssetTagIdvalue);
         grid.cellValue(rowIndex, "AssetDescription", AssetDescriptionvalue);
          grid.cellValue(rowIndex, "AssetCost", AssetCostvalue);
           grid.cellValue(rowIndex, "AssetSerialNo", AssetSerialNovalue);
            grid.cellValue(rowIndex, "AssetPurchaseDate", AssetPurchaseDatevalue);
           grid.cellValue(rowIndex, "ItemId", TxtAssetItemvalue);
           console.log(Photovalue)
         grid.cellValue(rowIndex, "Photo",Photovalue);
     
        grid.saveEditData()
        $('#customPopup').dxPopup('instance').option('visible', false);
        currentKey = -1;
    }
    function cancelButtonClick() {
        $('#customPopup').dxPopup('instance').option('visible', false);
        currentKey = -1;
    }

    function closeButtonClick() {
        $('#viewPopup').dxPopup('instance').option('visible', false);
        currentKey = -1;
    }

    function viewButtonClick(data) {
   var pop = $('#viewPopup').dxPopup('instance');
        pop.option('visible', true);
        $("#viewPopup").dxPopup({
            title: data.AssetTagId,
        //    visible: true,
        //    resizeEnabled: true
        });

       document.getElementById("img").src= data.Photo;
        document.getElementById("AssetDescription").innerText = data.AssetDescription;
        document.getElementById("AssetCost").innerText = data.AssetCost;
        document.getElementById("AssetSerialNo").innerText = data.AssetSerialNo;
        document.getElementById("TxtAssetPurchaseDate").innerText = new Date(data.AssetPurchaseDate).toDateString()
            ;
        document.getElementById("AssetItem").innerText = data.ItemTitle;
        document.getElementById("btn").href= "/Admin/AssetManagment/AssetDetails?id="+data.AssetId;
        currentKey = data.AssetId;
    }

  function changephotoname() {
         console.log("in photo")
                var fileName = document.getElementById("Photo").value.split("\\").pop();;
                    document.getElementById("photolabel").innerHTML=fileName;
                    
            }

</script>

    
             <script type="text/javascript">
           
                // Add the following code if you want the name of the file appear on select
         
            </script>
       
