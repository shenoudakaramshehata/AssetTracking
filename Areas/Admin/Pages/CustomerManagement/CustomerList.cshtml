@page
@model AssetProject.Areas.Admin.Pages.CustomerManagement.CustomerListModel
@{
}
<div class="slim-mainpanel">
    <div class="container">
        <<div class="slim-pageheader">
             <ol class="breadcrumb slim-breadcrumb">
                 <li class="breadcrumb-item"><a href="#">@sharedResource["Home"]</a></li>
                 <li class="breadcrumb-item"><a href="#">@sharedResource["SETUP"]</a></li>
                 <li class="breadcrumb-item active" aria-current="page">@sharedResource["Customer Management"]</li>
             </ol>
             <h6 class="slim-pagetitle">@sharedResource["Customer List"]</h6>
        </div><!-- slim-pageheader -->
        <div class="section-wrapper">
            @*<label class="section-title d-inline">@sharedResource["Customer List"]</label>*@
            <a asp-area="Admin" asp-page="/CustomerManagement/AddCustomer" class="btn btn-primary" > @sharedResource["Add New Customer"]   </a>
            <div class="table-wrapper">
                <div id="datatable1_wrapper" class="dataTables_wrapper no-footer">

@(Html.DevExtreme().DataGrid<AssetProject.Models.Customer>()
        .ID("Customerlistid")
    .DataSource(ds => ds.Mvc()
        .Controller("Customers")
        .LoadAction("Get")
        .Key("CustomerId")
        
    )
                    .ColumnAutoWidth(true)
                    .WordWrapEnabled(true)
                     .ShowBorders(true)
    .RemoteOperations(true)
     .ShowBorders(true)
    .Paging(p=>p.PageSize(10))
    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
    .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true).Placeholder(sharedResource["searching"]))
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )@*
                <a href="/Admin/CustomerManagement/EditCustomer?id=<%- data.ID %>"> @sharedResource["Edit"] |  </a>*@

      .HeaderFilter(headerFilter => headerFilter.Visible(true))
    .Columns(columns => {

       columns.Add().Caption("Actions").Caption(@sharedResource["Actions"]).Alignment(HorizontalAlignment.Center).CellTemplate(@<text>
                <a href="/Admin/CustomerManagement/EditCustomer?id=<%- data.CustomerId %>"> @sharedResource["Edit"] |  </a>
                <a href="/Admin/CustomerManagement/DeleteCustomer?id=<%- data.CustomerId %>"> @sharedResource["Delete"] | </a>
                <a href="/Admin/CustomerManagement/CustomerDetails?id=<%- data.CustomerId %>"> @sharedResource["Details"] </a>
            </text>).Width(150);
             })
    .Columns(columns => {
        columns.AddFor(m => m.FullName).Caption(sharedResource["FullName"]);

        columns.AddFor(m => m.CompanyName).Caption(sharedResource["Company Name"]);

        columns.AddFor(m => m.Address1).Caption(sharedResource["First Address"]);

        columns.AddFor(m => m.Phone).Caption(sharedResource["Phone"]);

        columns.AddFor(m => m.Email).Caption(sharedResource["Email"]);

    })
)
    </div>
            </div><!-- table-wrapper -->
        </div><!-- section-wrapper -->

    </div><!-- container -->
</div>

<script>
    window.addEventListener('DOMContentLoaded', (event) => {
        if (localStorage.getItem("lang") != "") {

            if (localStorage.getItem("lang") == "ar") {
                console.log("In Page")
                dataGrid = $("#Customerlistid").dxDataGrid("instance");
                dataGrid.option("rtlEnabled", true);
            }
        }
    });
</script>